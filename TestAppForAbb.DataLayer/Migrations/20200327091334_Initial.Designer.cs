// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestAppForAbb.DataLayer.Repository;

namespace TestAppForAbb.DataLayer.Migrations
{
    [DbContext(typeof(MotorDbContext))]
    [Migration("20200327091334_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestAppForAbb.Core.Models.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Current")
                        .HasColumnType("float");

                    b.Property<int>("MotorId")
                        .HasColumnType("int");

                    b.Property<double?>("Pressure")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Torque")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MotorId");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("TestAppForAbb.Core.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Current")
                        .HasColumnType("float");

                    b.Property<double?>("Displacement")
                        .HasColumnType("float");

                    b.Property<double?>("FuelConsumption")
                        .HasColumnType("float");

                    b.Property<double>("MaxPower")
                        .HasColumnType("float");

                    b.Property<double?>("MaxPressure")
                        .HasColumnType("float");

                    b.Property<double?>("MaxTorque")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double?>("Voltage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("TestAppForAbb.Core.Models.Measure", b =>
                {
                    b.HasOne("TestAppForAbb.Core.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
